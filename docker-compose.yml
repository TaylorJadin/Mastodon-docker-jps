version: '2'
services:
  mastodon:
    image: lscr.io/linuxserver/mastodon
    container_name: mastodon
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
      - LOCAL_DOMAIN=${DOMAIN}
      - SINGLE_USER_MODE=${SINGLE_USER_MODE}
      - WEB_CONCURRENCY=${WEB_CONCURRENCY}
      - MAX_THREADS=${MAX_THREADS}
      - DB_POOL=${DB_POOL}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DB_HOST=${DATABASE_HOST}
      - DB_USER=${DATABASE_USER}
      - DB_NAME=${DATABASE_NAME}
      - DB_PASS=${DATABASE_PASSWORD}
      - DB_PORT=${DATABASE_PORT}
      - WEB_DOMAIN=${DOMAIN}
      - VIRTUAL_HOST=${DOMAIN}
      - LETSENCRYPT_HOST=${DOMAIN}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_LOGIN=${SMTP_LOGIN}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_AUTH_METHOD=${SMTP_AUTH_METHOD}
      - SMTP_OPENSSL_VERIFY_MODE=${SMTP_OPENSSL_VERIFY_MODE}
      - SMTP_ENABLE_STARTTLS=${SMTP_ENABLE_STARTTLS}
      - SMTP_FROM_ADDRESS=${SMTP_FROM_ADDRESS}
      - S3_ENABLED=${S3_ENABLED}
      - S3_PROTOCOL=${S3_PROTOCOL}
      - S3_BUCKET=${S3_BUCKET}
      - S3_REGION=${S3_REGION}
      - S3_HOSTNAME=${S3_HOSTNAME}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - ES_ENABLED=${ES_ENABLED}
      - ES_HOST=${ES_HOST}
      - ES_PORT=${ES_PORT}
      - ES_USER=${ES_USER}
      - ES_PASS=${ES_PASS}
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - OTP_SECRET=${OTP_SECRET}
      - VAPID_PRIVATE_KEY=${VAPID_PRIVATE_KEY}
      - VAPID_PUBLIC_KEY=${VAPID_PUBLIC_KEY}

    volumes:
      - ./mastodon:/config
    restart: unless-stopped
    depends_on:
      - db
      - redis

  db:
    image: postgres:14-alpine
    container_name: postgres
    volumes:
      - ./db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    restart: unless-stopped

  redis:
    image: redis
    container_name: redis
    restart: unless-stopped

  nginx-proxy:
    build: https://raw.githubusercontent.com/TaylorJadin/mastodon-docker-jps/main/Dockerfile
    container_name: nginx
    volumes: 
      - certs:/etc/nginx/certs:ro
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    ports:
      - "80:80"
      - "443:443"
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: ""
    restart: unless-stopped

  letsencrypt:
    image: nginxproxy/acme-companion
    container_name: letsencrypt
    volumes:
      - certs:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    volumes_from:
      - nginx-proxy
    restart: unless-stopped
    
volumes:
  certs:
